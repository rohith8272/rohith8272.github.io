# ‚úàÔ∏è Is Your CG Off? Let Your Autopilot Tell You!

When tuning your ArduPlane and chasing that buttery-smooth flight, your pitch PID controller might be quietly screaming: **‚ÄúYour CG is off!‚Äù**

## üß† The Hidden Clue: `PIDP.I`

In ArduPlane, `PIDP.I` is the **Integral gain** of the **pitch controller**. It acts like a memory, slowly building up a correction if your aircraft keeps pitching the wrong way.

But here‚Äôs the fun part:  
If your plane needs **constant pitch-up or pitch-down input** to fly level, it‚Äôs probably not balanced right‚Äîand `PIDP.I` will show it!

---

## üîç Reading the Signs

- **If `PIDP.I` is strongly positive** during level flight:  
  Your CG is **too far forward**. The autopilot is constantly pulling up the nose to compensate.

- **If `PIDP.I` is strongly negative**:  
  Your CG is **too far aft**, and the autopilot is fighting to hold the nose down. That's risky territory!

Ideally, during straight and level flight, `PIDP.I` should hang out near zero. That means your airframe is naturally balanced and needs minimal correction.

---

## üìä Before & After

Here's what we observed during a tuning session:

**Before CG fix:**

- `PIDP.I` was climbing high just to keep the plane flying level.  
  _Insert Graph: sharp upward slope, persistent offset_

**After shifting the battery slightly aft:**

- `PIDP.I` stayed closer to zero‚Äîno more unnecessary pitch-up effort!  
  _Insert Graph: flatter line, much lower I-term_

---

## üõ†Ô∏è Logging It Yourself

To check your own aircraft:

1. Enable `PIDP` logging.
2. Fly straight and level in **FBWA** or **AUTO** mode.
3. Open your log in **Mission Planner** and plot `PIDP.I` (or `PIDP.I_term`).
4. Watch for any **long-term bias**.

---

## üß® Bonus: What is Integral Windup?

Integral windup happens when the **I-term keeps growing**, even though the autopilot **can't correct the error** (because servos are maxed out).

### Why it matters:

- The aircraft seems unresponsive at first.
- Later, it **overreacts violently** once control returns.
- It often causes **oscillations** or **instability** in pitch.

### What it looks like:

- `PIDP.I` keeps increasing steadily.
- Servo outputs (`RCOU.Cn`) are near limits.
- Control surfaces can't respond effectively.

### How to prevent it:

- Set `PIDP_IMAX` to limit how big the I-term can grow.
- Tune `PIDP.I` conservatively.
- Fix the mechanical CG so the autopilot doesn't need to "fight" for level flight.

---

## üéØ TL;DR

- `PIDP.I` shows whether your autopilot is compensating for a CG problem.
- A high or low I-term during level flight = **bad CG**.
- Integral windup = **too much I-term**, too late, often with instability.

---

Let your logs do the talking. Your autopilot might be trying to save you from a bad CG setup ‚Äî listen to `PIDP.I` and keep it balanced!  

_Questions or log files to share? Drop them below!_
